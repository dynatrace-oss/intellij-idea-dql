folding.lists.oneElement=One field
folding.lists.multipleElements={0} fields
autocomplete.list.currentTimestamp=current timestamp
autocomplete.types.queryStart=query
autocomplete.types.command=command
autocomplete.types.commandParameter=parameter
autocomplete.types.function=function
autocomplete.types.boolean=boolean
autocomplete.types.static=static
autocomplete.types.expression=expression
autocomplete.types.definedField=defined field
autocomplete.types.variable=variable
settings.dql.title=Dynatrace Query Language
settings.dql.tenants.title=Connected Tenants
settings.dql.tenants.edit=Edit Tenant
settings.dql.tenants.add=Add Dynatrace Tenant
settings.dql.tenants.form.url=Dynatrace Tenant URL:
settings.dql.tenants.form.token=Dynatrace Tenant API token:
settings.dql.tenants.form.error.missingFields=All fields must be filled
settings.dql.features.calculateFieldsDataType=Calculate assigned values to fields (experimental)
settings.dql.features.calculateFieldsDataTypeDescription=If enabled, the plugin will try to determine the data type assigned to the field. If disabled, all fields will be returning an "any" type, basically passing all validations.
settings.dql.features.calculateExpressionDataType=Calculate returned types for expressions (experimental)
settings.dql.features.calculateExpressionDataTypeDescription=If enabled, the plugin will try to determine the data type returned by expressions. If disabled, all expressions will be returning a basic type (conditions = boolean), basically passing all validations.
settings.dql.features.performLiveValidations=Perform live validation on Dynatrace tenant
settings.dql.features.defaultLiveValidationsTenant=Default validations tenant:
settings.dql.features.defaultLiveValidationsTenantDescription=If any Run Configuration related to the DQL file exists, the tenant selected there will be used to perform validations. Otherwise, the default tenant will be used.
settings.color.badValue=Bad value
settings.color.keywords=Keywords
settings.color.comments=Comments
settings.color.strings=String literals
settings.color.numbers=Numbers
settings.color.booleans=Booleans
settings.color.nulls=Null values
settings.color.dataFields=Commands//Data fields
settings.color.assignedDataFields=Commands//Assigned data fields
settings.color.variables=Commands//Variables
settings.color.names=Commands//Names
settings.color.parameters=Commands//Parameters
settings.color.enumValues=Commands//Enum values
settings.color.duration=Commands//Durations
settings.color.functionNames=Functions//Names
settings.color.functionParameters=Functions//Named parameters
settings.color.symbols=Operators//Symbols
settings.color.semicolons=Operators//Semicolons
settings.color.signs=Operators//Operation sign
settings.color.commas=Operators//Commas
settings.color.brackets=Operators//Brackets
settings.color.braces=Operators//Braces
settings.color.parentheses=Operators//Parentheses
settings.style.groups.bracket=Bracket expressions
settings.style.groups.commands=Command settings
settings.style.groups.functions=Function settings
settings.style.groups.expressions=Expression settings
settings.style.groups.default=Default
settings.style.spaceBetweenParameters=Space before command parameters
settings.style.spaceBeforeColon=Space before ":"
settings.style.spaceAfterColon=Space after ":"
settings.style.spaceInsideSubquery=Space inside subquery brackets
settings.style.spaceAfterPipe=Space after pipe
settings.style.spaceBeforePipe=Space before pipe
settings.style.spaceAroundEqualityOperator=Space around equality operators
settings.style.spaceAroundComparisonOperator=Space around comparison operators
settings.style.spaceAroundArithmeticOperator=Space around arithmetic operators
settings.style.spaceAroundAssignmentOperator=Space around the assignment operator
settings.style.spaceInsideBraces=Space inside braces
settings.style.spaceBetweenFunctionParams=Space between function parameters
settings.style.spaceBeforeFunctionParameters=Space between function name and parameters
settings.style.spaceInsideFunction=Space around function parentheses
settings.style.indentQueryCommands=Indent query commands
settings.style.lbBeforePipe=Line break before pipe
settings.style.lbBeforeParameter=Line break before command parameter
settings.style.lbAfterAssignment=Line break after assignment
settings.style.lbInsideSubqueries=Nested queries in new lines
settings.style.lbAfterOpeningBrace=Line break after opening brace
settings.style.lbBeforeClosingBrace=Line break before closing brace
settings.style.lbBeforeFunctionParams=Function parameters in new lines
settings.style.wrapLongExpressions=Wrap long expressions
settings.style.spaceBeforeArgumentsComma=Space before commas in the argument list
settings.style.lbBeforeArgumentsComma=Line break before commas in the argument list
settings.style.spaceBeforeFieldsComma=Space before commas in the bracket list
settings.style.spaceAfterFieldsComma=Space after commas in the bracket list
settings.style.lbBeforeFieldsComma=Line break before commas in the bracket list
settings.style.lbAfterFieldsComma=Line break after commas in the bracket list
settings.style.spaceBeforeFunctionArgumentsComma=Space before commas in the function arguments list
settings.style.lbBeforeFunctionArgumentsComma=Line break before commas in the function arguments list
settings.style.forceLbSettingsForBrackets=Force line breaks or spaces for list values
settings.style.forceLbSettingsForCommandParameters=Force line breaks or spaces for command parameters
settings.style.forceLbSettingsForFunctionParameters=Force line breaks or spaces for function parameters
findUsages.types.fields=DQL field
findUsages.types.variables=DQL variable
findUsages.types.functions=DQL function
findUsages.types.parameters=DQL parameter
findUsages.types.statements=DQL statement
findUsages.types.unknown=Unknown
documentation.string.type=string literal
documentation.field.type=data field
documentation.variable.type=variable
documentation.number.type=number
documentation.operator.type=operator
documentation.duration.type=duration
documentation.duration.name={0} {1}
documentation.sorting.type=sorting direction
documentation.boolean.type=boolean
documentation.null.type=empty value
documentation.command.type=command
documentation.command.unknown=This command is unknown.
documentation.statement.syntax=Syntax
documentation.statement.optionalParameter=optional
documentation.statement.requiredParameter=required
documentation.statement.moreInfoLink=https://docs.dynatrace.com/docs/discover-dynatrace/references/dynatrace-query-language/commands/{0}#{1}
documentation.function.type=function
documentation.function.aliases=Aliases
documentation.function.returnValues=Return values
documentation.function.unknown=This function is unknown. No validations will be performed on it.
documentation.function.moreInfoLink=https://docs.dynatrace.com/docs/discover-dynatrace/references/dynatrace-query-language/functions/{0}#{1}
documentation.parameter.name=Name
documentation.parameter.returnValue=Type
documentation.parameter.isRequired=Requirement
documentation.moreInformationLink=More information:
documentation.missingDocs=No documentation is available for this element
documentation.parameter.unknown=This parameter is unknown
documentation.parameter.type=parameter
documentation.parameter.allowedValues=Allowed value types
documentation.twoSidedExpression.type=expression
documentation.twoSidedExpression.leftType=Left side types
documentation.twoSidedExpression.rightType=Right side types
definition.returnedValues=Calculated value type
generic.lists={0} or {1}
presentation.command={0}
presentation.additiveExpression=additive expression
presentation.arrayExpression=iterative expression
presentation.assignExpression=assign value to {0}
presentation.bracketExpression=array of {0} elements
presentation.comparisonExpression=comparison expression
presentation.conditionExpression=condition expression
presentation.equalityExpression=equality expression
presentation.inExpression="in" expression
presentation.multiplicativeExpression=multiplicative expression
presentation.parameterExpression={0}
presentation.parenthesisExpression=parenthesis
presentation.sortingExpression=sorting by {0} elements
presentation.subqueryExpression=nested query
presentation.timeAlignmentExpression=time alignment
presentation.negationExpression=negation
# Those are used dynamically
duration.nanosecond=nanosecond
duration.millisecond=millisecond
duration.second=second
duration.minute=minute
duration.hour=hour
duration.day=day
duration.week=week
duration.month=month
duration.quarter=quarter
duration.year=year
duration.unknown=unknown
duration.nanoseconds=nanoseconds
duration.milliseconds=milliseconds
duration.seconds=seconds
duration.minutes=minutes
duration.hours=hours
duration.days=days
duration.weeks=weeks
duration.months=months
duration.quarters=quarters
duration.years=years
expression.operator.condition_operator=condition expression
expression.operator.equality_operator=equality expression
expression.operator.comparison_operator=comparison expression
expression.operator.multiplicative_operator=multiplicative expression
expression.operator.additive_operator=additive expression
expression.operator.unary_operator=negation
expression.operator.assignment_operator=assignment expression
expression.operator.in_expression_operand="in" expression
expression.operator.time_alignment_expression_operator=time alignment expression
inspection.groups.dql=Dynatrace query language
inspection.duration.type.display.name=Unknown duration type
inspection.duration.type.invalid=Invalid duration type. Should be one of {0}.
inspection.time.alignment.operand.type.display.name=Invalid time alignment duration type
inspection.time.alignment.operand.type.invalid=The "@" operand must be a valid duration unit (one of {0})
inspection.time.alignment.operator.display.name=Invalid time alignment target
inspection.subquery.body.display.name=Empty subquery body
inspection.subquery.body.empty=Empty body for the nested query
inspection.singleQuotes.usage.display.name=Single-quoted strings usage
inspection.singleQuotes.notSupported=Single-quoted strings are not supported. Use double-quoted strings instead
inspection.singleQuotes.fix.convertToDouble=Use double quotes for the string
inspection.sorting.invalidTarget.display.name=Invalid sorting target
inspection.sortingKeyword.usage.display.name=Disallowed sorting operation
inspection.sortingKeyword.usage.notAllowed=Sorting is not allowed here
inspection.bracket.body.display.name=Empty array
inspection.bracket.body.empty=No expressions within the array block
inspection.negation.display.name=Invalid negation target
inspection.equality.display.name=Invalid equality target
inspection.equality.unsupportedType.display.name=Unsupported equality check
inspection.equality.unsupportedType.invalidType=This side of "{0}" returns {2}, but should be one of: {1}
inspection.arithmetical.unsupportedType.display.name=Unsupported arithmetical operation
inspection.arithmetical.unsupportedType.invalidType=This side of "{0}" returns {2}, but should be one of: {1}
inspection.arithmetical.operation.display.name=Invalid arithmetical target
inspection.comparison.display.name=Invalid comparison target
inspection.comparison.unsupportedType.display.name=Unsupported comparison
inspection.comparison.unsupportedType.invalidType=This side of "{0}" returns {2}, but should be one of: {1}
inspection.condition.display.name=Invalid condition target
inspection.array.display.name=Invalid array expression target
inspection.assign.display.name=Invalid assign target
inspection.condition.static.display.name=Both sides are static values in condition
inspection.comparison.static.display.name=Both sides are static values in comparison
inspection.fieldReadOperation.display.name=Disallowed field value read
inspection.fieldReadOperation.notAllowed=This context requires a field assigment expression
inspection.fieldWriteOperation.display.name=Disallowed field value write
inspection.fieldWriteOperation.notAllowed=Assignment expressions are not allowed in this context
inspection.function.name.display.name=Unknown function name
inspection.function.name.unknown=This is an unknown function. No validations will be performed for it.
inspection.function.parameters.display.name=Missing function parameters
inspection.function.parameters.missingRequired=The function is missing the required parameters: {0}
inspection.function.duplicatedParameters.display.name=Duplicated function parameters
inspection.function.duplicatedParameters.duplicated=The parameter "{0}" was already defined
inspection.command.name.display.name=Unknown command
inspection.command.name.unknown=Command {0} is not known
inspection.command.context.display.name=Invalid command usage
inspection.command.context.invalidStartingCommand=The command {0} cannot be used as a DQL query start
inspection.command.context.pipeNotAllowed=DQL query cannot start with "|" symbol. If this is a partial DQL, rename the file to "*.partial.dql"
inspection.command.context.invalidExtensionCommand=The command {0} cannot be used as a DQL query extension
inspection.command.context.missingPipe=DQL statements must be separated by the "|" symbol
inspection.command.body.display.name=Missing command parameters
inspection.command.body.missingExclusiveParameters=The command {0} requires at least one from the following parameters: {1}
inspection.command.body.missingRequiredParameters=The command is missing the required parameters: {0}
inspection.command.duplicatedParameters.display.name=Duplicated command parameter
inspection.command.duplicatedParameters.duplicated=The parameter "{0}" was already defined
inspection.command.advisedBrackets.display.name=Advised brackets in a field list
inspection.command.advisedBrackets.missingBrackets=It is advised to use brackets around parameters with the list of expressions
inspection.command.advisedBrackets.fix.missingBrackets=Add brackets around the list of parameters
inspection.command.duplicatedFieldNames.display.name=Duplicated fields on the list
inspection.command.duplicatedFieldNames.duplicated=This field is already defined on the list
inspection.command.parametersValue.display.name=Invalid parameter value
inspection.command.parametersValue.invalidValue=The parameter "{0}" has an invalid value. \nShould be one of: {1}, has: {2}
inspection.parameter.conflicted.display.name=Parameter conflict
inspection.parameter.conflicted.conflictsWith=The parameter "{0}" cannot be defined with parameters: {1}
inspection.parameter.aggregationFunction.display.name=Invalid aggregation
inspection.parameter.aggregationFunction.invalidFunction=Invalid aggregation value. Should be one of: {0}
inspection.parameter.invalidName.display.name=Disallowed parameter name
inspection.parameter.invalidName.notAllowed=The parameter "{0}" cannot have a name
inspection.parameter.recordsList.display.name=Invalid records list definition
inspection.parameter.recordsList.invalidFunction=Invalid function. Should be one of: {0}
inspection.parameter.enumValue.display.name=Enum values validation
inspection.parameter.enumValue.invalidValue=The parameter {0} must have value one of: {1}
inspection.parameter.constantValue.display.name=Value is not static
inspection.parameter.constantValue.invalidValue=The parameter "{0}" accesses DQL data but should be a static value with type: {1}.
inspection.parameter.joinCondition.display.name=Joining condition issues
inspection.parameter.joinCondition.invalidCondition=The parameter "{0}" is not a valid join condition. Valid condition checks equality using "left" and "right" fields.
inspection.parameter.unknown.display.name=Unknown parameters
inspection.parameter.unknown.unknownNamed=Unknown parameter
inspection.parameter.unknown.unknownUnnamedParameter=This unnamed parameter is not valid. \nIs it "{0}"?
inspection.fix.addMissingParameters=Insert parameters: {0}
inspection.fix.addMissingParameter=Insert parameter: {0}
inspection.expression.operator.target.invalid=The value "{0}" is not a valid target for the expression
inspection.expression.operator.type.invalid=The value is invalid. Should be one of: {0}
inspection.expression.operand.onlyStatic=The expression uses only static values and can be simplified
inspection.fix.dropInvalidParameter=Drop parameter
inspection.fix.addParameterName=Specify parameter name
inspection.fix.dropElement=Drop the element
inspection.fix.genericFamilyName=DQL
inspection.fix.setName=Set a name to this field
inspection.negativeValue.display.name=Invalid negative value
inspection.complexNegativeValue.display.name=The negative value can be simplified
inspection.complexNegativeValue.canBeSimplified=The negative value contains a list of other negative values and could be simplified
inspection.fix.simplifyNegativeValue=Remove unnecessary "-"
inspection.rightSideNegativeValue.display.name=Negative value on the right side
inspection.rightSideNegativeValue.shouldBeParenthesized=The right side of the expression could be parenthesized for better readability
inspection.fix.parenthesizeElement=Add parenthesis to the element
action.DQL.ExecuteScript.text=Execute DQL Query
action.DQL.ExecuteScript.runConfigurationName=Execute DQL {0}
runConfiguration.executeDQL.displayName=Dynatrace Query Language
runConfiguration.executeDQL.description=Run a DQL query on a specific Dynatrace tenant
runConfiguration.executeDQL.indicator.starting=Starting execution of "{0}"...
runConfiguration.executeDQL.indicator.awaiting=The DQL "{0}" is executing...
runConfiguration.executeDQL.indicator.cancelled=The execution of DQL "{0}" was cancelled.
runConfiguration.executeDQL.errors.unauthorized=Dynatrace returned an unauthorized error: {0}
runConfiguration.executeDQL.errors.unknown=An unknown error happened: {0}
runConfiguration.executeDQL.errors.execution=Dynatrace returned an execution error: {0}
runConfiguration.executeDQL.settings.dqlFilePath=DQL script:
runConfiguration.executeDQL.settings.selectedTenant=Dynatrace tenant:
runConfiguration.executeDQL.settings.defaultScanLimit=Scan limits (in GB):
runConfiguration.executeDQL.settings.maxResultBytes=Maximum result bytes:
runConfiguration.executeDQL.settings.maxResultRecords=Maximum result records:
runConfiguration.executeDQL.settings.timeframeStart=Default timeframe start:
runConfiguration.executeDQL.settings.timeframeEnd=Default timeframe end:
runConfiguration.executeDQL.settings.errors.emptyFile=The DQL file must be set
runConfiguration.executeDQL.settings.errors.emptyTenant=The Dynatrace tenant must be selected
runConfiguration.executeDQL.panel.progress.start=Executing DQL...
components.tenantsSelector.manageTenants=...
components.tableResults.actions.copySelectedRows=Copy selected rows
components.tableResults.actions.openCellDetails=Open cell details
components.tableResults.actions.closeExecution=Close Execution
components.tableResults.actions.refreshExecution=Refresh
components.tableResults.actions.exportAsJson=Export results to JSON file
components.tableResults.actions.showMetadata=Show query metadata
components.tableResults.cellDetails.title={0} details
components.actions.saveAsFile.title=Export To File
components.actions.saveAsFile.description=Save table content as a file
components.actions.saveAsFile.error.title=Exporting Error
components.actions.saveAsFile.error.description=Failed to export table content as a file: {0}
components.dqlResults.summary.description=Returned {0} records in {1} ms
components.queryDetails.columns.property=Property
components.queryDetails.columns.value=Value
components.queryDetails.values.queryID=DQL query ID
components.queryDetails.values.scannedRecords=Scanned records
components.queryDetails.values.scannedDataPoints=Scanned data points
components.queryDetails.values.scannedBytes=Scanned bytes
components.queryDetails.values.executionTime=Execution time (ms)
components.queryDetails.values.timezone=Timezone
components.queryDetails.values.analysisTimeframeStart=Analysis timeframe start
components.queryDetails.values.analysisTimeframeEnd=Analysis timeframe end
components.queryDetails.values.sampled=Sampled