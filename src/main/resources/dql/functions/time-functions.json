{
  "duration": {
    "group": "time-functions",
    "name": "duration",
    "description": "Creates a duration from the given amount and time unit.",
    "syntax": [
      "duration(value, unit)"
    ],
    "parameters": [
      {
        "name": "value",
        "type": [
          "long",
          "double"
        ],
        "description": "The numeric value for the duration.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "unit",
        "type": [
          "string"
        ],
        "description": "The time unit of the duration.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "duration"
    ],
    "longDescription": "Creates a duration from the given amount and time unit.",
    "aliases": [
      "duration"
    ]
  },
  "formatTimestamp": {
    "group": "time-functions",
    "name": "formatTimestamp",
    "description": "Formats a given timestamp according to a format string using a given pattern.",
    "syntax": [
      "formatTimestamp(timestamp [, interval] [, format] [, timezone] [, locale])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "interval",
        "type": [
          "duration"
        ],
        "description": "",
        "required": false,
        "repetitive": false
      },
      {
        "name": "format",
        "type": [
          "string"
        ],
        "description": "",
        "required": false,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone used to format the timestamp.",
        "required": false,
        "repetitive": false
      },
      {
        "name": "locale",
        "type": [
          "string"
        ],
        "description": "The locale used to format the timestamp.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "string"
    ],
    "longDescription": "All letters A to Z and a to z are reserved as pattern letters.\nAny non-letter characters, other than [, ], {, }, # and the single quote will be output directly. However, it is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not affect your query. Unrecognized pattern letters result in an error. See Java DateTime Formatterï»¿ for the list of supported patterns and symbols.",
    "aliases": [
      "formatTimestamp"
    ]
  },
  "getDayOfMonth": {
    "group": "time-functions",
    "name": "getDayOfMonth",
    "description": "Extracts the day of the month from a timestamp.",
    "syntax": [
      "getDayOfMonth(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the day of the month will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the day of the month from a timestamp.",
    "aliases": [
      "getDayOfMonth"
    ]
  },
  "getDayOfWeek": {
    "group": "time-functions",
    "name": "getDayOfWeek",
    "description": "Extracts the day of the week from a timestamp.",
    "syntax": [
      "getDayOfWeek(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the day of the week will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "1 - Monday2 - Tuesday3 - Wednesday4 - Thursday5 - Friday6 - Saturday7 - Sunday",
    "aliases": [
      "getDayOfWeek"
    ]
  },
  "getDayOfYear": {
    "group": "time-functions",
    "name": "getDayOfYear",
    "description": "Extracts the day of the year from a timestamp.",
    "syntax": [
      "getDayOfYear(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the day of the year will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the day of the year from a timestamp.",
    "aliases": [
      "getDayOfYear"
    ]
  },
  "getEnd": {
    "group": "time-functions",
    "name": "getEnd",
    "description": "Extracts the end timestamp from a timeframe.",
    "syntax": [
      "getEnd(timeframe)"
    ],
    "parameters": [
      {
        "name": "timeframe",
        "type": [
          "timeframe"
        ],
        "description": "The timeframe expression from which the end timestamp will be extracted.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Extracts the end timestamp from a timeframe.",
    "aliases": [
      "getEnd"
    ]
  },
  "getHour": {
    "group": "time-functions",
    "name": "getHour",
    "description": "Extracts the hour from a timestamp.",
    "syntax": [
      "getHour(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the hour will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the hour from a timestamp.",
    "aliases": [
      "getHour"
    ]
  },
  "getMinute": {
    "group": "time-functions",
    "name": "getMinute",
    "description": "Extracts the minute from a timestamp.",
    "syntax": [
      "getMinute(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp expression"
        ],
        "description": "The timestamp expression from which the minute will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the minute from a timestamp.",
    "aliases": [
      "getMinute"
    ]
  },
  "getMonth": {
    "group": "time-functions",
    "name": "getMonth",
    "description": "Extracts the month from a timestamp.",
    "syntax": [
      "getMonth(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the month will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the month from a timestamp.",
    "aliases": [
      "getMonth"
    ]
  },
  "getStart": {
    "group": "time-functions",
    "name": "getStart",
    "description": "Extracts the start timestamp from a timeframe.",
    "syntax": [
      "getStart(timeframe)"
    ],
    "parameters": [
      {
        "name": "timeframe",
        "type": [
          "timeframe"
        ],
        "description": "The timeframe expression from which the start timestamp will be extracted.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Extracts the start timestamp from a timeframe.",
    "aliases": [
      "getStart"
    ]
  },
  "getSecond": {
    "group": "time-functions",
    "name": "getSecond",
    "description": "Extracts the second from a timestamp.",
    "syntax": [
      "getSecond(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the second will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the second from a timestamp.",
    "aliases": [
      "getSecond"
    ]
  },
  "getYear": {
    "group": "time-functions",
    "name": "getYear",
    "description": "Extracts the year from a timestamp.",
    "syntax": [
      "getYear(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the year will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the year from a timestamp.",
    "aliases": [
      "getYear"
    ]
  },
  "getWeekOfYear": {
    "group": "time-functions",
    "name": "getWeekOfYear",
    "description": "Extracts the week of the year from a timestamp.",
    "syntax": [
      "getWeekOfYear(timestamp [, timezone])"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression from which the week of the year will be extracted.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Extracts the week of the year from a timestamp.",
    "aliases": [
      "getWeekOfYear"
    ]
  },
  "now": {
    "group": "time-functions",
    "name": "now",
    "description": "Returns the current time as a fixed timestamp of the query start.",
    "syntax": [
      "now()"
    ],
    "parameters": [],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Returns the current time as a fixed timestamp of the query start.",
    "aliases": [
      "now"
    ]
  },
  "timeframe": {
    "group": "time-functions",
    "name": "timeframe",
    "description": "Creates a timeframe structure from the given start and end timestamps.",
    "syntax": [
      "timeframe(from [, to])"
    ],
    "parameters": [
      {
        "name": "from",
        "type": [
          "string",
          "timestamp",
          "duration"
        ],
        "description": "The start of the timeframe. Can be a timestamp or a duration. Duration is interpreted as an offset from now().",
        "required": true,
        "repetitive": false
      },
      {
        "name": "to",
        "type": [
          "duration",
          "string",
          "timestamp"
        ],
        "description": "The end of the timeframe. Can be a timestamp or a duration. Duration is interpreted as an offset from now(). The default value is now().",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timeframe"
    ],
    "longDescription": "Creates a timeframe structure from the given start and end timestamps.",
    "aliases": [
      "timeframe"
    ]
  },
  "timestamp": {
    "group": "time-functions",
    "name": "timestamp",
    "description": "Creates a timestamp using provided values in mandatory parameters.",
    "syntax": [
      "timestamp(year, month, day, hour, minute, second [, millis] [, micros] [, nanos] [, timezone])"
    ],
    "parameters": [
      {
        "name": "year",
        "type": [
          "long"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "month",
        "type": [
          "long"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "day",
        "type": [
          "long"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "hour",
        "type": [
          "long"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "minute",
        "type": [
          "long"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "second",
        "type": [
          "long"
        ],
        "description": "",
        "required": true,
        "repetitive": false
      },
      {
        "name": "millis",
        "type": [
          "long"
        ],
        "description": "",
        "required": false,
        "repetitive": false
      },
      {
        "name": "micros",
        "type": [
          "long"
        ],
        "description": "",
        "required": false,
        "repetitive": false
      },
      {
        "name": "nanos",
        "type": [
          "long"
        ],
        "description": "",
        "required": false,
        "repetitive": false
      },
      {
        "name": "timezone",
        "type": [
          "string"
        ],
        "description": "The timezone that should be used.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Creates a timestamp using provided values in mandatory parameters.",
    "aliases": [
      "timestamp"
    ]
  },
  "timestampFromUnixMillis": {
    "group": "time-functions",
    "name": "timestampFromUnixMillis",
    "description": "Creates a timestamp from the given milliseconds since Unix epoch.",
    "syntax": [
      "timestampFromUnixMillis(millis)"
    ],
    "parameters": [
      {
        "name": "millis",
        "type": [
          "long"
        ],
        "description": "Milliseconds since unix start time.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Creates a timestamp from the given milliseconds since Unix epoch.",
    "aliases": [
      "timestampFromUnixMillis"
    ]
  },
  "timestampFromUnixNanos": {
    "group": "time-functions",
    "name": "timestampFromUnixNanos",
    "description": "Creates a timestamp from the given nanoseconds since Unix epoch.",
    "syntax": [
      "timestampFromUnixNanos(nanos)"
    ],
    "parameters": [
      {
        "name": "nanos",
        "type": [
          "long"
        ],
        "description": "Nanoseconds since unix start time.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Creates a timestamp from the given nanoseconds since Unix epoch.",
    "aliases": [
      "timestampFromUnixNanos"
    ]
  },
  "timestampFromUnixSeconds": {
    "group": "time-functions",
    "name": "timestampFromUnixSeconds",
    "description": "Creates a timestamp from the given seconds since Unix epoch.",
    "syntax": [
      "timestampFromUnixSeconds(seconds)"
    ],
    "parameters": [
      {
        "name": "seconds",
        "type": [
          "long"
        ],
        "description": "Seconds since unix start time.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "timestamp"
    ],
    "longDescription": "Creates a timestamp from the given seconds since Unix epoch.",
    "aliases": [
      "timestampFromUnixSeconds"
    ]
  },
  "unixMillisFromTimestamp": {
    "group": "time-functions",
    "name": "unixMillisFromTimestamp",
    "description": "Converts a timestamp into milliseconds since Unix epoch.",
    "syntax": [
      "unixMillisFromTimestamp(timestamp)"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression which will be converted to milliseconds since epoch.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Converts a timestamp into milliseconds.",
    "aliases": [
      "unixMillisFromTimestamp"
    ]
  },
  "unixNanosFromTimestamp": {
    "group": "time-functions",
    "name": "unixNanosFromTimestamp",
    "description": "Converts a timestamp into nanoseconds since Unix epoch.",
    "syntax": [
      "unixNanosFromTimestamp(timestamp)"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression which will be converted to nanoseconds since epoch.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Converts a timestamp into nanoseconds.",
    "aliases": [
      "unixNanosFromTimestamp"
    ]
  },
  "unixSecondsFromTimestamp": {
    "group": "time-functions",
    "name": "unixSecondsFromTimestamp",
    "description": "Converts a timestamp into seconds since Unix epoch.",
    "syntax": [
      "unixSecondsFromTimestamp(timestamp)"
    ],
    "parameters": [
      {
        "name": "timestamp",
        "type": [
          "timestamp"
        ],
        "description": "The timestamp expression which will be converted to seconds since epoch.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "long"
    ],
    "longDescription": "Converts a timestamp into seconds.",
    "aliases": [
      "unixSecondsFromTimestamp"
    ]
  }
}