{
  "classicEntitySelector": {
    "group": "general-functions",
    "name": "classicEntitySelector",
    "description": "Returns entities matching the specified entity selector.",
    "syntax": [
      "classicEntitySelector(entitySelector)"
    ],
    "parameters": [
      {
        "name": "entitySelector",
        "type": [
          "string"
        ],
        "description": "The entity selector string. See limitations.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "array"
    ],
    "longDescription": "You can use the returned entity IDs to filter entities based on their ID. The classicEntitySelector function is only supported as in(field, classicEntitySelector(\"..\")).\nTo learn more, see entity selector.",
    "aliases": [
      "classicEntitySelector"
    ]
  },
  "entityAttr": {
    "group": "general-functions",
    "name": "entityAttr",
    "description": "Returns the attribute value for an entity.",
    "syntax": [
      "entityAttr(expression, name [, type])"
    ],
    "parameters": [
      {
        "name": "expression",
        "type": [
          "entity type"
        ],
        "description": "The expression to determine the entity ID.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "name",
        "type": [
          "string"
        ],
        "description": "The entity attribute name that shall be queried.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "type",
        "type": [
          "string"
        ],
        "description": "The entity type that shall be queried.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": ["any"],
    "longDescription": "Required permissionsTo use this function, you need the storage:entities:read permissions. For details, see Permissions in Grail.",
    "aliases": [
      "entityAttr"
    ]
  },
  "entityName": {
    "group": "general-functions",
    "name": "entityName",
    "description": "Returns the name of an entity.",
    "syntax": [
      "entityName(expression [, type])"
    ],
    "parameters": [
      {
        "name": "expression",
        "type": [
          "entity type"
        ],
        "description": "The expression to determine the entity ID.",
        "required": true,
        "repetitive": false
      },
      {
        "name": "type",
        "type": [
          "string"
        ],
        "description": "The entity type that shall be queried.",
        "required": false,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "string"
    ],
    "longDescription": "Returns the name of an entity.\nIf you do not define an alias for a field added using the entityName function, the default field name will be <entity-type>.name.",
    "aliases": [
      "entityName"
    ]
  },
  "exists": {
    "group": "general-functions",
    "name": "exists",
    "description": "Tests if a field exists.",
    "syntax": [
      "exists(field)"
    ],
    "parameters": [
      {
        "name": "field",
        "type": [
          "field identifier"
        ],
        "description": "The name of the field that will be checked if it exists.",
        "required": true,
        "repetitive": false
      }
    ],
    "examples": [],
    "returns": [
      "boolean"
    ],
    "longDescription": "Tests if a field exists.",
    "aliases": [
      "exists"
    ]
  },
  "in": {
    "group": "general-functions",
    "name": "in",
    "description": "Tests if a value is a member of an array.",
    "syntax": [
      "in(needle, haystack, …)"
    ],
    "parameters": [
      {
        "name": "needle",
        "type": [
          "array",
          "boolean",
          "double",
          "duration",
          "ip",
          "long",
          "record",
          "string",
          "timeframe",
          "timestamp"
        ],
        "description": "The element(s) to search for (the needle).",
        "required": true,
        "repetitive": false
      },
      {
        "name": "haystack",
        "type": [
          "array",
          "boolean",
          "double",
          "duration",
          "ip",
          "long",
          "record",
          "string",
          "timeframe",
          "timestamp"
        ],
        "description": "The elements to search for the needle element (the haystack).",
        "required": true,
        "repetitive": true
      }
    ],
    "examples": [],
    "returns": [
      "boolean"
    ],
    "longDescription": "The in function supports multiple haystacks and allows arrays in all arguments.",
    "aliases": [
      "in"
    ]
  },
  "record": {
    "group": "general-functions",
    "name": "record",
    "description": "Creates a record from the keys and values of the parameter.",
    "syntax": [
      "record(expression, …)"
    ],
    "parameters": [
      {
        "name": "expression",
        "type": [
          "array",
          "boolean",
          "double",
          "duration",
          "ip",
          "long",
          "record",
          "string",
          "timeframe",
          "timestamp",
          "assign expression"
        ],
        "description": "An expression to add to the record.",
        "required": true,
        "repetitive": true
      }
    ],
    "examples": [],
    "returns": [
      "record"
    ],
    "longDescription": "Creates a record from the keys and values of the parameter.",
    "aliases": [
      "record"
    ]
  }
}